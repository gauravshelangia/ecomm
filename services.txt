product
*	1. getproduct (productid) -- return product object
*	2. getproductname( productid ) -- return string product name
*	3. getproductimage( product id) -- list of images of the product
*	4. getproductdefaultmerchant(productid) -- merchantid
*	5. getproductmerchantlist(productid ) -- return list of merchant as sotred in some order
*	6. getproductrating(productid) --  return product rating
?	7. getproductcategoryid(productid) -- return categoryid
--	8. updtatemerchantlist() -- nothing to return but update the merchant ranking as triggered by events
	9. addnewproduct( product object) -- save into database
	10. getbrand(productid) -- return string brand name
	11. seachproduct(String ... ) return listing -list of size 20
	
	12. updatemerchantlist() -- on any triggered event 
		-- it should contain different updating factor on change of which how the score would change
			-- like
				-- can take the event id and compute the score/rank accordingly without calculating the whole score of the merchant's


	listing --- can combine name/image/rating/default_merchant (number_of_merchant, price from inventor) -- 2,3,6
		defaultmerchant not on amazon, also category not there, price get from inventory, no brand required for the listing

		Repository --
			2,3,6 -- added 
			5 -- added
			9,10 -- no need to do 
			11 do search later
			8,12 -- do later -- added service -- implement later

			Controller initiated -- implement later

merchant
*	1. getmerchant(merchantid) -- return merchant object
*	2. getmerchantname(merchant id) --  return string merchantname
*	3. getmerchantlogo(merchantid ) -- return logo image
*	4. getmerchantrating(merchantid) -- return int merchantrating
*	5. gettotalproductsold(merchantid) -- return number fo sold items
*	6. getdistinctproduct(merchantid) -- return distnict # of product

		need name, logo, rating 
	-- repository
		1,2,3,4 -- done
		5,6 -- done

	Service -- added 

	Controller initiated -- implement later

category
*	1. getcategoryname(categoryid) -- return stirng categoryname
*	2. setcategory(name) --  setcategorywith autogenerated id
	
	repository
		1.2 -- done
		
	Service added 

	Controller initiated -- implement later

// done 
Relations 
	product -- -- merchant
	product -- 1-N -- category





change jar to war in pom.xml -- 32/31 javabrains
actutor-- 33 javabrains 